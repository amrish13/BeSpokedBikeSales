// <auto-generated />
using System;
using BeSpokedBikeSales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeSpokedBikeSales.Migrations
{
    [DbContext(typeof(BeSpokedBikeSalesContext))]
    partial class BeSpokedBikeSalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeSpokedBikeSales.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123",
                            StartDate = new DateTime(2025, 5, 28, 21, 37, 32, 355, DateTimeKind.Utc).AddTicks(3339)
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Jane",
                            LastName = "Johnson",
                            Phone = "123",
                            StartDate = new DateTime(2025, 5, 28, 21, 37, 32, 355, DateTimeKind.Utc).AddTicks(3344)
                        });
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.HasIndex("ProductId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            BeginDate = new DateTime(2025, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 10,
                            EndDate = new DateTime(2025, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2
                        },
                        new
                        {
                            DiscountId = 2,
                            BeginDate = new DateTime(2025, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 21,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CommisionPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CommisionPercentage = 12,
                            Manufacturer = "BeSpoked",
                            Name = "Mountain Bike",
                            PurchasePrice = 2m,
                            QuantityOnHand = 32,
                            SalePrice = 5m
                        },
                        new
                        {
                            ProductId = 2,
                            CommisionPercentage = 24,
                            Manufacturer = "BeSpoked",
                            Name = "Road Bike",
                            PurchasePrice = 21m,
                            QuantityOnHand = 65,
                            SalePrice = 35m
                        });
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaleCommission")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesPersonId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Sale");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            CustomerId = 1,
                            Price = 35m,
                            ProductId = 1,
                            SaleCommission = 0m,
                            SalesDate = new DateTime(2025, 5, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            SalesPersonId = 1
                        },
                        new
                        {
                            SaleId = 2,
                            CustomerId = 2,
                            Price = 35m,
                            ProductId = 2,
                            SaleCommission = 0m,
                            SalesDate = new DateTime(2025, 5, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            SalesPersonId = 2
                        });
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.SalesPerson", b =>
                {
                    b.Property<int>("SalesPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesPersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SalesPersonId");

                    b.ToTable("SalesPerson");

                    b.HasData(
                        new
                        {
                            SalesPersonId = 1,
                            Address = "123 Elm St",
                            FirstName = "Sales",
                            LastName = "Person",
                            Manager = "Sales Manager",
                            Phone = "555-1234",
                            StartDate = new DateTime(2024, 5, 28, 17, 37, 32, 355, DateTimeKind.Local).AddTicks(3050)
                        },
                        new
                        {
                            SalesPersonId = 2,
                            Address = "456 Oak St",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Manager = "Sales Manager",
                            Phone = "555-5678",
                            StartDate = new DateTime(2023, 5, 28, 17, 37, 32, 355, DateTimeKind.Local).AddTicks(3104)
                        });
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.Discount", b =>
                {
                    b.HasOne("BeSpokedBikeSales.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeSpokedBikeSales.Models.Sale", b =>
                {
                    b.HasOne("BeSpokedBikeSales.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeSpokedBikeSales.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeSpokedBikeSales.Models.SalesPerson", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("SalesPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
